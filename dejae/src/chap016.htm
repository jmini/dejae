<html>
 <head> 
  <title>Des plug-ins pour le d&eacute;veloppement avec Java</title> 
  <meta http-equiv="Content-type" content="text/html; charset=ISO-8859-1"> 
  <meta name="description" content=""> 
  <meta name="keywords" content="java tutorial cours dej eclipse"> 
  <meta name="robots" content="all"> 
  <meta name="revisit-after" content="2 months"> 
  <meta http-equiv="Content-Language" content="fr-FX"> 
  <meta name="author" content="Jean Michel DOUDOUX"> 
  <link href="dej_style.css" rel="stylesheet" type="text/css"> 
 </head>
 <body> 
  <!--ENTETE--> 
  <table border="0" cellpadding="2" cellspacing="0" width="100%" bgcolor="#7B7BC2"> 
   <tbody> 
    <tr> 
     <td rowspan="2" align="center" width="50">&nbsp;</td>
     <td rowspan="2" align="center" width="50"> <a href="partie4.htm" alt="Partie 4 : le d&eacute;veloppement avanc&eacute; avec Java"> <img src="FlecheG.gif" alt="Partie 4 : le d&eacute;veloppement avanc&eacute; avec Java" align="left" border="0" hspace="0" width="31" height="31"> </a> </td> 
     <td rowspan="2" align="center" width="50"> <a href="chap017.htm" alt="17. Le d&eacute;veloppement d'interfaces graphiques"> <img src="FlecheD.gif" alt="17. Le d&eacute;veloppement d'interfaces graphiques" align="left" border="0" hspace="0" width="31" height="31"> </a> </td> 
     <td rowspan="2" align="center"> <a href="javascript:window.print()"> <img src="imprimer.gif" width="46" height="40" align="middle" alt="Imprimer" border="0"> </a> </td> 
     <td rowspan="2" align="center"> <a href="index.htm"> <img src="index.gif" alt="Sommaire" align="middle" border="0" hspace="0" width="34" height="31"> </a> </td> 
     <td rowspan="2" align="center"> <a href="indexavecframes.htm" target="_top"> <img src="frame.png" alt="Consulter avec table des mati&egrave;res" align="middle" border="0" hspace="0" width="46" height="40"> </a> </td> 
     <td align="right"> <font color="#FFFFFF" size="5"><b><i>D&eacute;veloppons en Java avec Eclipse&nbsp;&nbsp;</i></b></font><font color="#FFFFFF" size="-2"> v 0.80&nbsp;&nbsp;</font></td> 
    </tr> 
    <tr> 
     <td align="right"><font color="#FFFFFF" size="-2">Copyright (C) 2003-2007 Jean-Michel DOUDOUX &nbsp;&nbsp;</font></td> 
    </tr> 
   </tbody> 
  </table> 
  <hr> 
  <p>&nbsp;</p> 
  <h1>
   <!--idrefpage value="pluginjava" -->
   <!--resumetitre value="pr&eacute;sente quelques plug-ins tiers facilitant le d&eacute;veloppement avec Java." -->
   <!--nchpdeb--><a name="chap_16">16. 
    <!--nchpfin--> Des plug-ins pour le d&eacute;veloppement avec Java</a></h1> 
  <p>&nbsp;</p> 
  <!--chapitredeb--> 
  <div align="right"> 
   <table border="0" cellspacing="0" summary="titre"> 
    <tbody>
     <tr> 
      <td width="270"><img src="images/chapitre.gif" alt="chapitre" width="347" height="100" border="0"></td> 
      <td width="50" valign="top"><img src="images/1.gif" alt="1" width="62" height="83" border="0"></td> 
      <td width="50" valign="top"><img src="images/6.gif" alt="6" width="62" height="83" border="0"></td> 
     </tr> 
    </tbody>
   </table> 
   <br> 
  </div> 
  <!--chapitrefin--> 
  <p>&nbsp;</p> 
  <div align="justify"> 
   <p>Il existe de nombreux plug-ins d&eacute;velopp&eacute;s par des tiers pour enrichir Eclipse. Certains de ces plug-ins sont sp&eacute;cialement d&eacute;di&eacute;s &agrave; faciliter le d&eacute;veloppement de code avec Java. </p> 
   <p>Ce chapitre va pr&eacute;sent&eacute; plusieurs de ces plug-ins :</p> 
   <ul> 
    <li>Jalopy : ce plug-in permet de mettre en oeuvre l'outil open source du m&ecirc;me nom qui permet de formatter le code source </li> 
    <li>Log4E : ce plug-in permet de faciliter la mise en oeuvre d'un syst&egrave;me de log (log4J, api de logging du JDK 1.4 ou common logging) </li> 
   </ul> 
   <p>&nbsp;</p> 
   <h2>
    <!--nchpdeb--><a name="chap_16_1">16.1. 
     <!--nchpfin--> Le plug-in Jalopy</a></h2> 
   <p>Jalopy est un utilitaire open source tr&egrave;s pratique qui permet de formatter du code source Java et m&ecirc;me de v&eacute;rifier l'application de normes de codage.</p> 
   <p>Il permet notamment :</p> 
   <ul type="disc"> 
    <li>d'indenter le code</li> 
    <li>de g&eacute;n&eacute;rer des mod&egrave;les de commentaires Javadoc dynamiques en fonction des &eacute;l&eacute;ments du code &agrave; documenter (par exemple g&eacute;n&eacute;rer un tag @param pour chaque param&egrave;tre d'une m&eacute;thode)</li> 
    <li>d'organiser l'ordre des clauses import</li> 
    <li>d'organiser l'ordre des membres d'une classe selon leur modificateur</li> 
    <li>de v&eacute;rifier l'application de normes de codage,</li> 
    <li>...</li> 
   </ul> 
   <p>Il existe des plug-ins pour plusieurs IDE dont un pour Eclipse&nbsp; : il suffit de t&eacute;l&eacute;charger le fichier jalopy-eclipse-0.2.6.zip sur le site <a href="http://jalopy.sourceforge.net/download.html">http://jalopy.sourceforge.net/download.html</a></p> 
   <p>Pour installer le plug-in, il faut d&eacute;compresser le contenu de l'archive dans un r&eacute;peroire temporaire et copier le r&eacute;pertoire de.hunsicker.jalopy.plugin.eclipse_0.2.6 dans le r&eacute;pertoire plugins d'Eclipse.</p> 
   <p>L'option "Jalopy preferences" du menu "Fen&ecirc;tre" permet de param&eacute;trer Jalopy</p> 
   <p align="center"> <img border="0" width="400" height="286" src="images/plugin010.png"> </p> 
   <p>Pour la mise en oeuvre, il suffit d'utiliser le menu contextuel "Format with Jalopy" de l'&eacute;diteur de code Java.</p> 
   <table border="1" cellpadding="4" cellspacing="0" width="100%" align="center"> 
    <tbody>
     <tr bgcolor="#A6A5C2"> 
      <td>Exemple : </td> 
     </tr> 
     <tr> 
      <td> <pre><code>
  package com.moi.test;
  public class TestJalopy {
  public static void main(String[] args) {}
  public void maMethode(int a, int b) {}
  private int maMethode2(int a) { return a; }
  public void maMethode3() {}
  }</code></pre> </td> 
     </tr> 
    </tbody>
   </table> 
   <br> 
   <table border="1" cellpadding="4" cellspacing="0" width="100%" align="center"> 
    <tbody>
     <tr bgcolor="#A6A5C2"> 
      <td>R&eacute;sultat :</td> 
     </tr> 
     <tr> 
      <td> <pre><code>
package com.moi.test;

/**
 * DOCUMENT ME!
 *
 * @author $author$
 * @version $Revision$
 */
public class TestJalopy {
    /**
     * DOCUMENT ME!
     *
     * @param args DOCUMENT ME!
     */
    public static void main(String[] args) {
    }

    /**
     * DOCUMENT ME!
     *
     * @param a DOCUMENT ME!
     * @param b DOCUMENT ME!
     */
    public void maMethode(int a, int b) {
    }

    /**
     * DOCUMENT ME!
     */
    public void maMethode3() {
    }

    /**
     * DOCUMENT ME!
     *
     * @param a DOCUMENT ME!
     *
     * @return DOCUMENT ME!
     */
    private int maMethode2(int a) {
        return a;
    }
}</code></pre> </td> 
     </tr> 
    </tbody>
   </table> 
   <br> 
   <p>Le formattage du code source est r&eacute;alis&eacute; en tenant compte des nombreux param&egrave;tres d&eacute;finis dans Jalopy.</p> 
   <p>Il est &eacute;galement possible de demander le formattage de l'ensemble des fichiers source Java contenus dans un ou plusieurs packages ou r&eacute;pertoires. Il suffit de s&eacute;lectionner le ou les packages ou r&eacute;pertoires et de s&eacute;lectionner l'option "Format" du menu contextuel.</p> 
   <p>&nbsp;</p> 
   <h2>
    <!--nchpdeb--><a name="chap_16_2">16.2. 
     <!--nchpfin-->Log4E</a></h2> 
   <p>Log4E est un plug-in gratuit&nbsp; dont le but est de faciliter l'utilisation d'une API de logging dans du code java.</p> 
   <p>Log4E propose en standard d'utiliser 3 API&nbsp;: Log4J, l'api Logging du JDK 1.4 et l'api Common Logging du projet Jakarta.</p> 
   <p>Le site officiel de ce plug-in est &agrave; l'url&nbsp;: <a href="http://log4e.jayefem.de/index.php/Main_Page">http://log4e.jayefem.de/index.php/Main_Page</a></p> 
   <h3>
    <!--nchpdeb--><a name="chap_16_2_1">16.2.1. 
     <!--nchpfin-->Installation </a></h3> 
   <p>Il y a deux fa&ccedil;ons d'obtenir le plug-in et de l'installer&nbsp;: </p> 
   <ul type="circle"> 
    <li>t&eacute;l&eacute;charger l'archive .zip contenant le plug-in et le d&eacute;compresser dans le r&eacute;pertoire d'installation d'Eclipse</li> 
    <li>utiliser la fonctionnalit&eacute; de mise &agrave; jour d'Eclipse avec l'url : <a href="http://log4e.jayefem.de/update">http://log4e.jayefem.de/update</a></li> 
   </ul> 
   <p>&nbsp;</p> 
   <h3>
    <!--nchpdeb--><a name="chap_16_2_2">16.2.2. 
     <!--nchpfin-->Les param&egrave;tres</a></h3> 
   <p>Le plug-in Log4E poss&egrave;de de nombreux param&egrave;tres modifiables dans la fen&ecirc;tre de gestion des param&egrave;tres.</p> 
   <p>Un des param&egrave;tres le plus important se situe &agrave; l'arborescence Log4E / Profile / Templates</p> 
   <p align="center"><img border="0" width="572" height="305" src="images/plugin024.png"></p> 
   <p>Le profile permet de s&eacute;lectionner l'api qui sera utilis&eacute;e par le plug-in lors de la g&eacute;n&eacute;ration de code pour les op&eacute;rations demand&eacute;es.</p> 
   <h3>
    <!--nchpdeb--><a name="chap_16_2_3">16.2.3. 
     <!--nchpfin-->Utilisation</a></h3> 
   <p>Le fichier suivant sera utilis&eacute; dans cette section&nbsp;: </p> 
   <table border="1" cellpadding="4" cellspacing="0" width="100%" align="center"> 
    <tbody>
     <tr bgcolor="#A6A5C2"> 
      <td>Exemple : </td> 
     </tr> 
     <tr> 
      <td> <pre><code>package com.jmd.test.java; 

public class TestLog4E { 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a = 1; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b = 2; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("resultat = " + additionner(a, b)); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int additionner(int a, int b) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int res = a + b; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return res; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 
}</code></pre> </td> 
     </tr> 
    </tbody>
   </table>
   <br> 
   <p>L'api de logging s&eacute;lectionn&eacute;e dans la pr&eacute;f&eacute;rences pour les exemples de cette section est celle du JDK 1.4.</p> 
   <p>Le menu contextuel de l'&eacute;diteur de code se voie ajouter une nouvelle option nomm&eacute;e Log4E.</p> 
   <p align="center"><img border="0" width="467" height="176" src="images/plugin025.png"></p> 
   <p>Avant de pouvoir utiliser une de ces options, il est n&eacute;cessaire de sauvegarder le code source pour permettre au plug-in de r&eacute;aliser les modifications.</p> 
   <p align="center"><img border="0" width="441" height="144" src="images/plugin026.png">&nbsp;</p> 
   <p>Cette nouvelle entr&eacute;e du menu contextuel, propose plusieurs options r&eacute;parties en 4 groupes.</p> 
   <p>Toute op&eacute;rations impliquant une modification du code est soumise &agrave; l'approbation de l'utilisation sous la forme d'une vue permettant de comparer le code avant et apr&egrave;s modification et d'accepter ou non les modifications.</p> 
   <p>L'option &laquo;&nbsp;Declare Logger&nbsp;&raquo; permet de demander l'insertion dans le code des clauses imports ainsi que la d&eacute;claration des objets n&eacute;cessaires &agrave; l'utilisation de l'api de logging .</p> 
   <table border="1" cellpadding="4" cellspacing="0" width="100%" align="center"> 
    <tbody>
     <tr bgcolor="#A6A5C2"> 
      <td>Exemple : </td> 
     </tr> 
     <tr> 
      <td> <pre><code>package com.jmd.test.java;
 
import java.util.logging.Level; 
import java.util.logging.Logger; 

public class TestLog4E { 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /** 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* Logger for this class 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/ 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static final Logger logger = Logger.getLogger(TestLog4E.class 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .getName()); 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a = 1; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b = 2; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("resultat = " + additionner(a, b)); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int additionner(int a, int b) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int res = a + b; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return res; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 
}</code></pre> </td> 
     </tr> 
    </tbody>
   </table>
   <br> 
   <p>L'option &#x93;Insert Log Statement At The Position ...&#x94; permet d'ins&eacute;rer du code pour utiliser l'api de logging.</p> 
   <p>Pour utiliser cette option, il est n&eacute;cessaire de placer le curseur de l'&eacute;diteur de code dans une m&eacute;thode, sinon un message d'erreur est affich&eacute;.</p> 
   <p align="center"><img border="0" width="441" height="139" src="images/plugin027.png"></p> 
   <p>L'option &#x93;Insert Log Statement For This Method&#x94; permet d'ins&eacute;rer automatique des appels &agrave; l'api de logging dans la m&eacute;thode : au d&eacute;but de la m&eacute;thode, &agrave; la fin de la m&eacute;thode et dans les blocs try/catch.</p> 
   <table border="1" cellpadding="4" cellspacing="0" width="100%" align="center"> 
    <tbody>
     <tr bgcolor="#A6A5C2"> 
      <td>Exemple avec la m&eacute;thode additionner()</td> 
     </tr> 
     <tr> 
      <td> <pre><code>... 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int additionner(int a, int b) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (logger.isLoggable(Level.FINE)) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logger.fine("start"); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int res = a + b; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (logger.isLoggable(Level.FINE)) { 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logger.fine("end"); 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return res; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } 
... </code></pre> </td> 
     </tr> 
    </tbody>
   </table>
   <br> 
   <p>Pour utiliser cette option, il est n&eacute;cessaire de placer le curseur de l'&eacute;diteur de code dans une m&eacute;thode, sinon un message d'erreur est affich&eacute;.</p> 
   <p>L'option &#x93;Insert Log Statement For This Class&#x94; est identique &agrave; l'option pr&eacute;c&eacute;dente mais effectue les traitements sur toute la classe.</p> 
   <p>L'option &#x93;Replace System.out's For This Method&#x94; permet de remplacer les utilisations de la classe System.out ou System.err par l'utilisation de l'api de logging.</p> 
   <p>Pour utiliser cette option, il est n&eacute;cessaire de placer le curseur de l'&eacute;diteur de code dans une m&eacute;thode, sinon un message d'erreur est affich&eacute;.</p> 
   <p>L'option &#x93;Replace System.out's For This Class&#x94; est identique &agrave; l'option pr&eacute;c&eacute;dente mais effectue les traitements sur toute la classe.</p> 
  </div> 
  <!--PIED-->
  <hr> 
  <table border="0" cellpadding="2" cellspacing="0" width="100%" bgcolor="#7B7BC2"> 
   <tbody> 
    <tr> 
     <td rowspan="2" align="center" width="50">&nbsp;</td>
     <td rowspan="2" align="center" width="50"> <a href="partie4.htm" alt="Partie 4 : le d&eacute;veloppement avanc&eacute; avec Java"> <img src="FlecheG.gif" alt="Partie 4 : le d&eacute;veloppement avanc&eacute; avec Java" align="left" border="0" hspace="0" width="31" height="31"> </a> </td> 
     <td rowspan="2" align="center" width="50"> <a href="chap017.htm" alt="17. Le d&eacute;veloppement d'interfaces graphiques"> <img src="FlecheD.gif" alt="17. Le d&eacute;veloppement d'interfaces graphiques" align="left" border="0" hspace="0" width="31" height="31"> </a> </td> 
     <td rowspan="2" align="center"> <a href="javascript:window.print()"> <img src="imprimer.gif" width="46" height="40" align="middle" alt="Imprimer" border="0"> </a> </td> 
     <td rowspan="2" align="center"> <a href="index.htm"> <img src="index.gif" alt="Sommaire" align="middle" border="0" hspace="0" width="34" height="31"> </a> </td> 
     <td rowspan="2" align="center"> <a href="indexavecframes.htm" target="_top"> <img src="frame.png" alt="Consulter avec table des mati&egrave;res" align="middle" border="0" hspace="0" width="46" height="40"> </a> </td> 
     <td align="right"> <font color="#FFFFFF" size="5"><b><i>D&eacute;veloppons en Java avec Eclipse&nbsp;&nbsp;</i></b></font><font color="#FFFFFF" size="-2"> v 0.80&nbsp;&nbsp;</font></td> 
     <td rowspan="2" align="center" valign="middle"> <script language="JavaScript1.1">
<!--
hsh = new Date();
hsd = document;
//hsr = hsd.referrer.replace(/[<>]/g, '');
hsr = parent.document.referrer.replace(/[<>]/g,  '');
hsi = '<a href="http://www.xiti.com/xiti.asp?s=128624"';
hsi += ' TARGET="_top"><img width="39" height="25" border=0 ';
hsi += 'src="http://logv23.xiti.com/hit.xiti?s=128624';
hsi += '&p=';
hsi += '&hl=' + hsh.getHours() + 'x' + hsh.getMinutes() + 'x' + hsh.getSeconds();
if(parseFloat(navigator.appVersion)>=4)
{Xiti_s=screen;hsi += '&r=' + Xiti_s.width + 'x' + Xiti_s.height + 'x' + Xiti_s.pixelDepth + 'x' + Xiti_s.colorDepth;}
hsd.writeln(hsi + '&ref=' + hsr.replace(/&/g, '$') + '" title="Mesurez votre audience"></a><\!--');
//-->
</script> 
      <noscript> 
       <a href="http://www.xiti.com/xiti.asp?s=128624" target="_top"><img width="39" height="25" border="0" src="http://logv23.xiti.com/hit.xiti?s=128624&amp;p=&amp;" title="Mesurez votre audience"></a> 
      </noscript> 
      <!--//--> </td> 
    </tr> 
    <tr> 
     <td align="right"><font color="#FFFFFF" size="-2">Copyright (C) 2003-2007 Jean-Michel DOUDOUX &nbsp;&nbsp;</font></td> 
    </tr> 
   </tbody> 
  </table>   
 </body>
</html>